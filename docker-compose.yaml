
services:
  strapi:
    build: .
    container_name: strapi
    working_dir: /app
    ports:
      - '1337:1337'
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: db-strapi
      DATABASE_HOST: postgres
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: js4life
    volumes:
      - ./config:/opt/app/config
      - ./src:/opt/app/src
      - ./package.json:/opt/package.json
      - ./yarn.lock:/opt/yarn.lock
      - ./.env:/opt/app/.env
      - ./public/uploads:/opt/app/public/uploads
    depends_on:
      - postgres

  postgres:
    image: postgres:16
    container_name: postgres
    environment:
      POSTGRES_DB: db-strapi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: js4life
    volumes:
      - ./data:/var/lib/postgresql/data

  # traefik:
  #   image: traefik:v2.5
  #   container_name: traefik
  #   command:
  #     - "--api.insecure=true"
  #     - "--providers.docker=true"
  #     - "--entrypoints.web.address=:80"
  #     - "--entrypoints.websecure.address=:443"
  #     - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
  #     - "--certificatesresolvers.myresolver.acme.email=your-email@example.com"
  #     - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "8080:8080"
  #   volumes:
  #     - "/var/run/docker.sock:/var/run/docker.sock:ro"
  #     - "./letsencrypt:/letsencrypt"
  #   labels:
  #     - "traefik.http.routers.strapi.rule=Host(`strapi.yourdomain.com`)"
  #     - "traefik.http.routers.strapi.entrypoints=websecure"
  #     - "traefik.http.routers.strapi.tls.certresolver=myresolver"
